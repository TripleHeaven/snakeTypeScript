{"version":3,"sources":["scripts/Item.ts","scripts/Drawing.ts","scripts/Direction.ts","scripts/Point.ts","scripts/Grid.ts","scripts/Figure.ts","scripts/Wall.ts","scripts/Snake.ts","scripts/Food.ts","scripts/Program.ts"],"names":[],"mappings":";;;;;;AEAA,AFCA,ASDA,IPAY,AFCP,ASDL,ITCA,KEDA,AOAA,GAAA,OAAA,CAAA,WAAA,CAAA;ARCA,AICA,ADFA,ADCA,IFAA,AICA,ADFA,ADCA,MFAA,AICA,ADFA,GHCA,AGDA,EDCA,GAAA,EFAA,AGDA,CHCA,AGDA,IDCA,CAAA,GFAA,AGDA,CHCA,AGDA,SDCA,CAAA;ADDA,AGEA,ALDA,ASAA,CPDA,AFCA,GSAA,MAAA,CPDY,AFCP,ESAL,ETAA,EAAS,GEDT,AOCA,CAAA,CPDqB,OOCrB,CAAA;APAI,ADCJ,AIAA,ADDA,AJCI,AGCJ,EDFI,AFCA,ECAJ,AGDA,ADEA,EHDI,CAAA,EGCJ,EDFI,ADCJ,AGDA,AJCI,CEDA,AGCJ,ALAI,EIDJ,MJCI,CEDA,AEAJ,AJCI,CEDA,AEAJ,EJCI,CAAA,CEDA,AFCA,CEDA,EFCA,CEDA,CAAA,AEAJ,CFAI,AEAJ,GFAI,EFCA,EEDA;AACA,ADAJ,AIAA,ALCI,AGAJ,AMDA,EPAI,AFCA,ESDJ,ETCI,CAAA,GSDJ,CPAI,AGAJ,ALCI,CEDA,AFCA,CSDJ,IJAA,CLCI,CAAA,CKDJ,AIAA,CPAI,AGkBH,AIlBD,CPAI,AFCA,CAAA,CAAA,GAAA,CEDA,CAAA,AOAJ,CAAA,EPAI,CAAA,AFCA,CEDA,GAAA,MAAA;AACA,ADDJ,AGAA,AJEI,AGDJ,EDAI,AFCA,EIFJ,EJEI,CAAA,CIFJ,GFCI,AFCA,CEDA,ADDJ,ADEI,AGDJ,SDAI,CAAA,CFCA,CAAA,GAAA,CEDA,AFCA,CEDA,AFCA,GEDA,AFCA,CEDA,CAAA,GAAA,MAAA,AFCA;AEAA,ADGA,AIHA,ADFJ,AJGI,AGMA,AMRJ,EPCI,AGAA,ALCA,ESFJ,ETEI,CAAA,CKDA,CAAA,EHAA,ADGA,ADFA,AGMA,AMRJ,CPCI,AFCA,ESFJ,ENQI,CAAa,CFJb,AIHA,AFOA,CFJa,AIHb,CFOgB,CDPhB,ACOA,AMRJ,CPCI,AODJ,CTEI,AGMmB,CHNnB,CCEA,AIHA,CFOA,CFJyC,ADFzC,CKDA,ALCA,AGMyB,CDPzB,AFCA,AGMA,CDPA,CDGA,AEI2B,AMR/B,CTEI,ASFJ,CPCI,ADGoD,CCHpD,CAAA,GAAA,AGAQ,CAAR,EAAiB,ELCjB,EEDA;AACH,ADGO,AIHA,ADHR,AJII,AGMI,CDZR,CFMI,CENQ,GFMR,CAAA,CGMQ,CFJC,AIHA,ELCT,CENiB,AEErB,AJII,GENQ,ADQJ,AEIW,CAAP,EFJU,AIHd,CAAe,ALCnB,CAAA,CGMsB,CDZd,CAAA,AFMR,CCEI,ADFJ,CAAA,CKDI,CAAwB,CLC5B,CGMI,EAA2B,CDZvB,GFMR,EENQ,AGKoB,CAAA,EAAC,IHLrB,CAAA,SAAA,GAAS,EAAT,CAAZ;ADSQ,AIHI,ADAR,AJCH,AGMW,AMTZ,CTHA,EAAK,CSGL,GTHS,ECQI,CIHG,AIFhB,CJEiB,ADAb,ADOa,CFJT,AIHU,ALLb,AGYO,CMTZ,ERKmB,AGHf,ADOiB,CCPJ,AJLR,AGYG,CEPI,CAAQ,CAAR,ALLP,CCQe,AIHZ,AIFZ,CTHS,ASGT,CJE2B,ALL3B,EIKI,EHGe,AGHiB,CHGL,EQL/B,CAAA,KLEI,EHGe,AGHmC,CHGZ,IAAvB,CAAX;AACA,AIHQ,ADAR,ADOI,SFJC,AGHA,EDOI,CAAL,CFJJ,EIHe,AFOF,CFJD,AEIR,CCPJ,ECAQ,CJGR,AGHgB,QAAhB;AHIA,AIHK,ADAL,AJRA,AGeI,AMVZ,IAAA,GTLQ,CAAA,CCWK,AGHA,EDOI,CHfT,EGeI,CHfJ,ASKR,ENUuB,CCPf,AKHR,CRMQ,ADXA,CGeI,CCPa,CHGC,GQN1B,CAAA,ERMgC,CAAC,CGHzB,IHGkB,GAAe,EQNzC,CAAA,CRM6C,CAAC,IAAL,CAAU,MAA3C;AACH,AIHI,ADCD,ADMC,KEXD,AFOA,ICFK,EDOD,ECPJ,GAAY,EAAZ;ACAA,AFQI,AMZZ,IAAA,OJIe,AFQE,AMZjB,GNYY,AMZZ,EJIQ,CFQe,CAAC,CAAC,EMZzB,CNYY,AMZZ,SAAA,CAAA;AROI,AIFC,ADAG,ADQI,EFNR,CITA,MJSA,AGFS,CHET,CEMa,CAAL,CCRK,CAAC,CDQG,CAAC,CCRD,ADQE,CCRf,ADQI,CFNR,CAAA,AGFqB,CAAC,GAAG,KHEzB,GAAA,AGFI,EAA+B,CAAC,EAAhC,EAAmC,KHEvC;AACI,AGFI,ADQA,AMbZ,IAAA,MAAA,CLKiB,ADQA,CAAL,CMbZ,ELKY,ADQS,CCRC,ADQA,CCRV,ADQW,CAAX,EMbZ,CLK2B,AKL3B,ELKY,MKLZ,CAAA;ARQQ,AIHJ,AFSK,EETL,MJGQ,AIHR,CAAA,IJGa,GAAG,EAAZ,AIHJ,CAAA,MAAA,GAAA,UAAQ,CAAR,EAAkB;AJId,AIHJ,ADAQ,ADYP,AMjBL,MAAM,CAAC,CRQK,CIHH,EDAQ,EKLjB,CRQkB,CGHG,CAAC,AKLN,CRQK,CIHjB,CJGI,AIHW,ADAM,CAAb,EAAiB,CAAC,GCA1B,ADA6B,CCAJ,CILb,OLKJ,ECAiB,ADAe,CCAf,ADAgB,ECAf,ADAlB,EAAoC;AHIxC,AIHA,ADAQ,AKLZ,MAAI,GRQK,CIHD,CAAC,AILT,CRQI,AIHM,CJGG,AGHI,IAAL,CCAJ,ADAc,CCAL,ADAL,CCAJ,CAAJ,ADAqB,CHGrB,AGHQ,CCAQ,EJGK,CGHK,IAAI,IHG9B,GGH8B,CAAA,KAAJ,CAAW,CAAX,EAAa,CAAb,EAAe,MAAA,CAAA,IAAA,CAAK,KAApB,CAAlB;AHIR,AIHI,ADAC,ADYT,AMjBA,ENiBA,IMjBI,CNiBJ,CAAA,CFTS,GAAL,AQRJ,CRQa,EIHE,EFYf,CAAA,CEZQ,EJGJ,CAAmB,AESvB,CFTI,EAAqB,AESzB,CFTI,EAAuB,KAAK,EES1B,IFTqB,CAAY,CESvC,EAAuB,EFTnB,CESJ,CFT6C,CESP,IFTY,MAAL,CAAY,MAArD;AIFC,ADAA,ADYD,AMjBJ,MAAI,ENiBI,GAAG,CMjBX,GNiBe,WAAA,CAAA,SAAA,CAAU,EAArB,EAAwB;AFTxB,AIFH,ADAA,ADYO,AMjBR,KJCA,CIDI,GROK,AQPT,ENiBa,CAAL,CFVK,CAAC,EEUG,CFVA,CAAb,EAAgB,CAAC,CEUb,EFVgB,KAAK,IAAL,CAAU,QAA9B,EAAwC,CAAC,EAAzC,EAA4C;AACxC,AIFR,AFYK,AMjBL,MAAI,IAAJ,CROa,AIFN,IJEU,CAAC,AIFlB,GJEqB,CAAb,EAAgB,CAAC,GAAG,KAAK,IAAL,CAAU,SAA9B,EAAyC,CAAC,EAA1C,EAA6C;AACzC,AIFX,ADDD,AKJA,ELIA,AKJA,CJFA,GDMA,AKJI,CLIJ,EKJO,GROS,CQPL,GLIX,CHGqB,AGHrB,EKJW,CAAA,CROK,CAAU,EQPnB,CAAS,CROA,CAAe,AQPxB,CROS,CGHhB,AKJmB,CROe,CAAlB,AQPT,CLIP,AKJA,CROqC,GAArB,IAA4B,IGH5C,EHG4C,CAAA,IAAA,CAAK,KAArC,EAA2C;AACvC,AGHZ,ADYA,AMhBJ,MAAI,ENgBI,CCZC,CKJD,CNgBG,ECZE,AKJF,CLIG,CHGO,AESN,ECZE,AKJF,CROC,AGHZ,CHGqB,CGHJ,CAAC,EKJP,CLIU,AKJV,ENgBA,CAAA,CFTC,AQPL,CLImB,AKJV,EROiB,AQP1B,EAAY,EAAZ,CNgBI,AMhBf,CLII,ADYqB,ECZe,CHGxB,AGHyB,CDYrC,CCZA,CDY0B,CCZc;AHI5B,AIHpB,ADAY,ADYA,AMhBR,EAAA,IAAI,CAAC,EJIT,EDAiB,ADYA,CAAL,EMhBR,CROqB,AIHzB,ADAY,AKJK,CLIK,ADYF,CCZR,CHGQ,CAAS,AQPR,CAAC,CLIK,CDYf,CCZA,IHGQ,CAAkB,CAAC,AQPnC,GROoC,KAAK,UAAzB,EAAoC,CAAC,GAAC,KAAK,UAA3C,EAAsD,KAAK,UAA3D,EAAsE,KAAK,UAA3E;AACH,AItBjB,AF+BS,AMhBL,CJfJ,EAAA,GIeQ,GRIQ,MAIK,AQRjB,IRQqB,KAAK,IAAL,CAAU,IAAV,CAAe,CAAf,EAAkB,CAAlB,EAAqB,GAArB,IAA4B,MAAA,CAAA,IAAA,CAAK,IAArC,EAA0C;AAC3C,AGLR,AKHR,MAAI,KLGS,AKHJ,GAAG,CRQS,AGLJ,CAAC,EHKF,AQRA,CRQS,AGLJ,CAAb,EAAiB,CAAC,EKHV,CLGa,AKHb,ERQA,GAAqB,AGLH,AKHtB,CAAU,IAAI,IRQV,AGLR,EAAqC,CAAC,AKHpB,CAAA,CLGlB,EAAyC,EKH3B,CAAW,CAAX,EAAa,CAAb,EAAe,MAAA,CAAA,IAAA,CAAK,SAApB,CAAV,EAAyC,CAAzC,EAA2C,WAAA,CAAA,SAAA,CAAU,KAArD,CAAZ;ARSgB,AI3BZ,AGCR,AJqBgB,ADYR,AMfJ,AFlBJ,ADDA,EGmBI,EDlBJ,ADAA,ADDA,EGmBQ,CJnBA,AImBC,CJnBD,AFkCI,GAAG,AIjCf,ADDA,CECA,CJqBqB,CCtBb,AImBJ,AFlBJ,ADDA,CL2ByB,AO1BzB,ALiCmB,AMfF,EJnBT,ADsBQ,CHKI,AGLM,CHKG,AGLb,CKHM,CLGO,AKHN,AFlBvB,ADDA,CECA,AJqBgB,AGrBhB,ADDA,CDAQ,AGCR,GJqBkC,ADYf,CFPC,AEOD,CFPmB,CAAC,CGLD,AKHlC,CFlBJ,ADDA,CL2BwC,AM1BxC,ADDA,CECA,CAAA,ELiCmB,CFP0B,AGLP,ADYT,CCZS,GDY9B,ECZ0B,ADYA,CCZW,CAAX,EHKd,AGL2B,CAAb,CHKsB,CAAC,AGLR,GHKS,GGLT,CAAA,CHKc,GGLd,CAAK,KAApB,CHKd,AGLJ,EHK0D,KAAK,UAA3D,EAAsE,KAAK,UAA3E;AACH,AGLJ,ADYD,AMfR,MAAI,GRKa,CQLT,CNeK,CAAL,CMfG,ERSM,CEMA,CMfF,ERSM,GEMb,CMfO,CRSW,AQTX,IRSM,AQTV,CRSoB,AQTX,EAAT,ERSU,AQTE,CRSa,CAAf,AQTV,CAAX,CRSuC,CAAlB,EAAqB,GAArB,IAA4B,MAAA,CAAA,IAAA,CAAK,MAArC,EAA4C;AAC7C,AO5BpB,AJsBS,ADYA,AMfL,AFnBJ,ADDA,EGoBI,EDnBJ,ADAA,ADDA,EGoBQ,CAAC,GHpBT,CECA,CDAA,CDDA,CECA,CP4ByB,AM5BzB,EEmBI,CRSgB,AQTA,CRSS,CK7B7B,CECA,AFDA,CECA,ADAA,CEmBI,AFnBJ,KN4BoB,CK7BpB,CAAA,CL6ByC,AO5BzC,CAAA,CDAA,CAAA,MN4BoB;AACA,AGNf,AKHD,EAAA,CLJA,GKII,CAAC,OAAL,CRSqB,AQTR,GRSG,CAAS,AQTR,CAAC,ORSF,CAAkB,CAAC,AQTnC,EAdY,CRuBwB,AQRpC,KRQyC,UAAzB,EAAoC,CAAC,GAAC,KAAK,UAA3C,EAAsD,KAAK,UAA3D,EAAsE,KAAK,UAA3E;AACH,AO7BjB,ALkCQ,AIlCR,ADDA,IECA,ADAA,ADDA,IHmCY,CFRS,CO1BrB,ADAA,CJkCe,CGnCf,CECA,ADAA,EN8BqB,AEIF,AGnCnB,IL+ByB,CO9BzB,ADAA,CCAA,ADAA,CDDA,CAAA,CL+B8B,EEIX,CAAA,CFJM,CAAU,AO9BnC,ADAA,CCAA,ADAA,GN8ByB,AK/BzB,CL+BwC,AK/BxC,CL+ByB,CEIN,CFJwB,AEId,CFJJ,EAAqB,EEItC,CFJiB,CEIU,GFJkB,MAAA,CAAA,IAAA,CAAK,SAArC,EAA+C;AAChD,AGRhB,ADYQ,AMdR,ELEA,AKFA,ILEA,CAAA,GKFQ,CNcK,AMdJ,CNcD,GFJa,CGRrB,ADYiB,CCZjB,CHQgB,CAAS,GEIjB,ECZR,GAAA,AKFA,CRUgB,AQVU,GRUW,MGR5B,AKFT,ERUgB,AQVqB,ELErC,EAAuB,UKFvB,EAAoD,KAApD;ARWgB,AO/BpB,AJuBQ,ADYC,AInCT,ADDA,IECA,ADAA,ADDA,IECA,AFDA,CFwBa,AGvBb,IHuBiB,CAAC,CHQO,EGRJ,CHQD,AGRZ,CHQqB,CGRJ,CAAC,GAAG,GHQT,CAAkB,CAAC,AGRL,GHQM,KAAK,AGRrC,EAAoC,CAAC,EAArC,EAAyC,GHQ7B,EAAoC,CAAC,GAAC,KAAK,UAA3C,EAAsD,KAAK,UAA3D,EAAsE,KAAK,UAA3E;AACH,AOhCjB,AJwBY,ADYP,AMfD,AFrBJ,ADDA,GHwBI,QCCa,AKHJ,ILGQ,CAAC,GAAG,CAAb,EAAgB,CAAC,EKHzB,CLG4B,AKHJ,CAAxB,EAAyB,ELGQ,SAAzB,EAAoC,CAAC,EAArC,EAAyC;AHUxC,AOlCb,AJyBgB,AKHR,AFtBR,ADDA,QGuBW,CAAC,CDtBZ,ACsBa,AFtBb,ADDA,GF0BqB,AKHV,GDtBX,ADAA,ADDA,CF0ByB,AKHL,CDtBpB,ADAA,ADDA,IF0B8B,EKHnB,CLGsB,CAAjB,EAAqB,AKHN,CAAC,CAAC,GLGS,AKHX,GLGc,CKHL,GLGS,CAAC,MAAlC,EAA0C,AKHlD,EAA8C,GLGS,EAA/C,EAAkD;AHUzD,AOnCiB,AJ0BN,ADWhB,AMdQ,AFvBe,ADDD,EECA,ALqCtB,AIrCuB,ADDD,IGwBd,CNcR,CAAA,GKrCsB,ACuBT,AFvBU,ADDD,CECA,ACuBR,AFvBS,ADDD,EF2BF,EI1BE,AFDA,CHsCtB,AIrCuB,CCAD,AJ0BE,ADWxB,AGtCsB,CF2BG,AG1BF,EEuBf,ENcR,CKrCsB,AJ0BE,AKHE,AHxBJ,CECA,AJ0BF,AG1BG,ADDD,CF2BU,ADWhC,AIrCuB,CH0BH,IAAiB,IKHX,CLGgB,ADWnC,AMdmB,CNc1B,EAAgB,CCXqB,CAAU,CAAV,EAAa,CAAb,AKHX,CAAU,CLGiB,CAAjC,GKHZ,CLGkD,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,IAAiB,KAAK,IAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAA3E,EAA6E;AHU5F,AGTmB,ADWhB,AMdC,GRfL,EQaI,MNgBO,AMbF,CNaG,CAAC,CAAF,CMbC,CAAC,CLEY,AKFX,CNaI,EMbN,CLEQ,CAAU,CAAV,ADWG,CAAZ,AMbU,CLEY,CAAb,EAAgB,ADWR,CAAC,CAAC,AMblB,CLEQ,ADWQ,GCXc,AKFX,CNaI,AMbH,CAAC,ELEa,CAAC,AKFhB,CNaS,CAApC,EMboC,CLEM,CAAJ,CAAY,GAAlC,KKFX,EAA4C;ADtBrD,AJyBiB,ADWhB,AMbO,AFxBR,ADFA,GHqCA,GMXQ,KDvBR,ACuBa,AFxBb,ADFA,CG0Bc,GDvBd,AFHA,CEGa,ADDb,ADFa,CCED,IEwBJ,AFxBR,EAA0B,CCC1B,ACuB0B,AH1B1B,EEGiC,AFHD,GCEhC,EAA2C,ICC3C,ACuB0B,AH1B1B,CG0B0B,CDvByB,AFHD,ICElD,EAAiE,EEwBvC,CAAU,IAA5B;ARWZ,AOlCI,AJ2Ba,AKHR,AFzBL,ADFA,KGyBS,GDtBT,ADDA,ADFA,CLqCJ,EQTa,EDzBT,ADDA,ADFA,EG4Ba,CRSjB,AOjCQ,ACwBU,AFzBV,ADFA,CG2BW,GAAF,EDxBT,ADDA,CCCA,ADDA,CEyBkB,GDxBlB,ADDA,CCCA,ADDA,EEyBS,EDxBT,ADDA,EEyB4B,CAAC,CAAC,CDxBvB,ADDC,EEyBoB,EDzBhC,ADDA,EE0ByC,WAAhC,EAA4C;AR9BzD,AGiCa,ADUb,AMZY,AH3BJ,CLJR,EAAA,CKIQ,EG2BI,GNYZ,CGvCQ,CG2BS,AH3BT,CG2BU,ENYlB,CGvCQ,CAAA,IAAA,CG2BI,GAAkB,CH3Bf,IAFX,MG6B0B,CAAA,SAAA,CAAU,IAA5B;ADxBJ,AJ2BC,ADjCT,AM+BS,AF1BD,CJLR,EAAA,CKMQ,ADDA,CEwBK,IDvBD,ADDA,CCCC,ADDA,CE2BA,IAAI,CAAC,CAAC,ED1BX,ADDA,CE2BS,ED1BQ,ADDA,ECCjB,AC0BkB,AF3BlB,IE2BS,IAAiB,CAAC,CAAC,GAAF,IAAS,SAA9B,EAAwC;ARjCxC,AOQL,AJ2BH,AKDO,AF3BJ,ADFA,GFmBJ,CIhBI,ADDA,ADFA,EG6BI,CRlCC,CAAA,COQD,ADDA,ADFA,CEGC,ADDA,ADFA,CG6BI,CAAC,GRlCL,GAAA,AOQL,CDDA,ADFA,EEGgB,AC0BZ,CF3Ba,ADFA,EG6BK,AH7BtB,CLLK,IOQL,GDDA,GE2BsB,CAAA,SAAA,CAAU,EAA5B;ADzBJ,ALTA,AMmCC,ID1BD,GLTA,CAAA,CKSI,CAAC,GLTL,GAAA,GKSA,ELTA,CKSiB,SAAjB;AJ2BR,AKAK,AF5BG,ADFA,SF8BR,AG5Ba,ADFC,IF8Bd,AG5BiB,ADFC,CCEA,ADFC,GCEE,ADFC,CCEd,ADFA,ECEgB,ADFE,CCED,ADFE,GCEC,ADFE,MCEtB,EAA4B,ADF5B,CCE6B,CDFG,CCEhC,ADFiC,ECED,ADFhC,EAAqC;AEIxC,AJVL,AGUY,ADHH,CFPT,EAAA,GEOS,ICGO,CAAC,ADHJ,CAAC,ECGM,IAAI,GDHf,CAAe,GCGA,CAAA,ADHf,CAAoB,ICGT,ADHa,CCGH,IAAV,CAAR,CDHqB,CAAA,KAAJ,CAAU,CAAV,EAAY,CAAZ,EAAc,MAAA,CAAA,IAAA,CAAK,MAAnB,CAApB;AG8BL,AF1BQ,ADHH,EG6BL,IF1BQ,CAAC,CAAC,EE0BF,CAAC,CF1BD,CAAO,CAAP,EAAS,KAAI,CAAC,GE0BtB,CAAwB,KF1BhB,OE0BR,EAAsC,OAAtC,GAAiD,YAAA;ADzBjD,AJZS,AKsCL,ED1BJ,EC0BI,ED1BJ,CAAA,AJZS,CAAA,EKsCC,ELtCD,CKsCI,ELtCJ,CIYT,CAAA,EJZS,EKsCY,CAAC,KD1BtB,GAAA,MC0Ba,CAAwB,GD1B1B,KAAX,EAAwB,EC0BX,CAAT;ADzBA,AC0BA,AF3BI,ADHJ,IG8BA,EF3BI,CE2BD,CD1BC,CAAC,AFJA,CG8BC,CF3BE,CCCA,ADDC,CDHA,CAAC,EG8BE,CD1BC,AC0BA,AH9BA,CAAb,EAAiB,CCGb,ADHc,CCGC,EDHE,ECGjB,CE2BE,AF3BkB,CE2BA,AF3BpB,CCCI,CAAkB,CAAlB,CC0BF,AH9BN,CEI4B,AC0B5B,CH9BgC,CAAC,EAAjC,CEIiC,CFJG,OEIR,GAAc,CAAlC,CAAR;AACA,AC0BA,AF3BC,ADHE,IG8BH,EH9BG,EEIC,CAAC,EFJE,CEIC,AFJA,CG8BC,GAAG,CD1BC,GC0BG,CH9Bb,CAAe,IAAf,CAAqB,EEIhB,AC0BQ,CD1BU,AC0BV,CD1BR,AFJoB,EEIA,IC0BhB,CD1BqB,AC0BT,AH9BI,CAAA,KG8BhB,AH9BY,CAAU,CG8BH,AH9BP,CEII,CFJQ,EEIS,AC0BjC,CD1BJ,AC0BR,CD1BA,KFJ6C,GAAC,CAAtB,EAAwB,MAAA,CAAA,IAAA,CAAK,MAA7B,CAArB;AG+BH,AH9BC,IG8BD,CHvC8C,CAU9C,OG6BS,CAAC,SAAV;AD1BA,AC2BA,QD3BI,AC2BA,KD3BK,CAAC,EC2BE,GAAG,CD3BX,CAAa,IAAI,KC2BK,CAAC,CD3BN,CAAA,KAAJ,CAAW,CAAX,EAAa,CAAb,AC2BU,ED3BK,MAAA,CAAA,IAAA,CAAK,IAApB,CAAb,CAAJ,EAA4C;AACxC,AC2BD,AF7BN,UE6BU,CD3BE,IC2BG,CAAC,KD3BT,CAAgB,GC2Bb,ED3BH,IC2BwB,KAAK,CAAC,SAAN,CAAgB,IAAhB,CAAzB,EAA+C;AD1BjD,AC2BM,AH/BP,KEEA,GC6BO,CH/BF,EEKA,EFLI,CAAC,GAAG,CAAb,EAAiB,CG+BG,AH/BF,CG+BG,EH/BA,MG+BD,CAAb,EH/BP,EAAgC,CAAC,EAAjC,EAAoC;AEMhC,AC0BA,AF9BR,ADDO,ECCP,IDDO,CCCP,CAAA,ECIY,CFLD,CAAC,GEKK,EDJjB,CAAA,GDDO,CCCP,ADDsB,EEKV,CAAe,ADJ3B,CDDO,CAAqB,IEKhB,AFLoB,IEKG,CAA3B,CDJR,CCIqC,AFLL,CAAA,KAAJ,CAAW,CAAX,EAAa,CAAb,EAAe,MAAA,CAAA,IAAA,CAAK,MAApB,CAArB;AEMK,ADJR,ADDC,QCCG,IAAI,CCIK,EDJF,KAAK,ECIR,CAAe,KAAf,CDJG,CAAe,KAAf,EAAX;ACKK,ACyBF,AF7BH,QAAI,EE6BG,EF7BC,GE6BI,AF7BD,CE6BE,GAAN,CAAU,AF7BD,IE6BK,CAAC,OF7BX,EE6BM,AF7BjB,CE6BgC,CAAf,CAAV,CAAJ,EAAiC;AAC7B,AF7BP,ADDA,QG8BO,CF7BF,ADDA,GG8BM,CAAC,AH9BH,CAAC,GAAG,CCCb,ADDA,CCCe,CDDE,CAAC,EG8BX,AF7BP,CE6BuB,AF7BH,ADDC,ICCrB,CE6BO,IH9BP,EAAgC,CAAC,EAAjC,EAAqC;AEKjC,AC0BA,AF7BP,ADDM,GCHP,GDGO,KEIM,AFJF,CAAC,QEIJ,CAAe,AFJhB,CAAe,GEId,CAAoB,AFJrB,CAAqB,GEII,CFJA,MEIA,CAAA,AFJA,CAAA,IEIJ,CAAW,AFJX,CEIA,AFJW,EEIE,CAAb,EAAe,GFJI,GEIJ,AFJK,CEIL,AFJf,EAAsB,CAAtB,CEIe,CAAK,AFJI,IEIxB,CAApB,CFJ4C,CAAA,IAAA,CAAK,MAA7B,CAArB;AEKF,AFJA;AEKJ,ACyBM,AF7BP,EAAA,CCRA,GCqCO,CF7BP,CAAA,GE6BY,CAAC,IAAN,CF7BP,CAAA,YAAA,GAAA,YAAA;AE8BO,AF7BH,ME6BG,EF7BC,EE6BG,CAAC,CF7BA,GAAG,KAAK,GE6Bb,MF7BQ,CAAe,KAAK,SAAL,CAAe,MAAf,GAAwB,CAAvC,CAAX;ACKJ,ACyBO,AF7BH,ADFH,EEMD,IAAA,ACyBO,CDzBP,CDJQ,EE6BG,CAAC,EF7BC,GCIb,ADJgB,CCIhB,CCyBO,CAAa,CF7BA,GE6BI,CAAC,GF7BL,CAAA,CCIpB,GAAA,CCyBO,AF7BS,CAAU,IAAV,CAAZ,GCIS,GAAb,EAAkB,GAAlB,EAAqB;AACjB,ACyBG,AF7BH,ICIA,ADJA,EE6BG,CDzBA,EDJE,CCIC,ACyBC,AF7BD,CE6BE,GDzBE,ADJV,CCIW,ADJA,CAAX,EE6BG,AF7BU,CCIP,ACyBU,CDzBA,GAAV,ADJY,CCIlB,ACyBqB,CAAC,OF7BtB,EE6BG;ADxBH,ACyBG,AF7BH,ADHR,IEOQ,ECyBG,CDzBA,EFPX,CEOc,ACyBC,CAAC,AF7BD,EDHf,CEOkB,CAAC,CDJX,EE6BG,CAAa,CDzBV,CAAW,ECyBG,CDzBd,ACyBe,CDzBrB,QCyBG;ADxBH,ACyBG,AF7BN,ADxBL,CAAA,CAA0B,CCmBtB,GEkCO,IHrDe,CE4BX,AF5BW,IE4BP,ACyBC,CDzBA,ACyBC,CHrDrB,CAAA,GE4Be,CAAW,GCyBf,CDzBmB,CAAC,MAAL,MAAiB,GAAG,GAAG,GAAvB,CAAX,IAA0C,GAAjD,CAHiB,CAGqC;AACvD,ACyBC,GD7BJ,ECgB8B,EAazB,GAbyB,CAA1B;AAcH,AF9BD,ADzBS,ECyBT,CEWA,IFXA,ADzBS,CCyBT,ADzBS,IAAA,GAAA,ECyBT,CAAA,CDzBS,ECyBT,GAAA,UAAK,IAAL,EAAiB;ACKrB,AC0BC,AF9BO,CErBR,OFqBY,CCIZ,GDJgB,CCIhB,EDJmB,KAAK,YAAL,EAAX;ACzBR,CAAA,CAA0B,QAAA,CAAA,MAA1B,CAAA;AD0BQ,QAAI,IAAI,CAAC,KAAL,CAAW,IAAX,CAAJ,EAAqB;AC1BhB,AD2BD,MAAA,CC3BC,CAAA,ED2BG,CAAC,CC3BJ,ED2BD,CC3BC,ED2BU,EC3BV,ID2BU,CAAA,IAAA,CAAK,SAAhB;AACA,WAAK,SAAL,CAAe,IAAf,CAAqB,IAArB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GARD;;AASA,EAAA,KAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACI,QAAI,IAAI,GAAG,KAAK,SAAL,CAAe,KAAK,SAAL,CAAe,MAAf,GAAsB,CAArC,CAAX;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAiB,CAAC,GAAG,KAAK,SAAL,CAAe,MAAf,GAAwB,CAA7C,EAAiD,CAAC,EAAlD,EAAsD;AAClD,UAAI,IAAI,CAAC,KAAL,CAAW,KAAK,SAAL,CAAe,CAAf,CAAX,CAAJ,EAAkC;AAC9B,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GARD;;AASA,EAAA,KAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAW,CAAX,EAAqB;AACjB,QAAI,IAAI,GAAG,KAAK,SAAL,CAAe,KAAK,SAAL,CAAe,MAAf,GAAsB,CAArC,CAAX;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAiB,CAAC,GAAG,CAAC,CAAC,SAAF,CAAY,MAAZ,GAAqB,CAA1C,EAA8C,CAAC,EAA/C,EAAmD;AAC/C,UAAI,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,SAAF,CAAY,CAAZ,CAAX,CAAJ,EAA+B;AAC3B,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GARD;;AASJ,SAAA,KAAA;AAnDA,CAAA,CAA2B,QAAA,CAAA,MAA3B,CAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA","file":"Program.1f30c575.js","sourceRoot":"..","sourcesContent":["export {Item};\nenum Item{\n    BORDER,\n    FOOD,\n    SNAKEHEAD,\n    SNAKETAIL,\n    FIELD\n}","import {Grid} from \"./Grid\";\nimport {Item} from \"./Item\";\nexport class Drawing{\n    canvas : HTMLCanvasElement;\n    ctx : CanvasRenderingContext2D;\n    grid : Grid;\n    squareSize : number ; \n    constructor (canvas : HTMLCanvasElement, grid : Grid){\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.grid = grid;\n        this.squareSize = canvas.width / grid.grid.length;\n    }\n    DrawFrame(): void{\n        // Running thru Grid \n        let width = 15;\n        let height = 15;\n        this.ctx.fillStyle = \"#111111\";\n        this.ctx.fillRect (0,0,this.canvas.width,this.canvas.height);\n        for (let i = 0; i < this.grid.mapWidth; i++){\n            for (let j = 0; j < this.grid.mapHeight; j++){\n                if (this.grid.grid[i][j].sym == Item.FIELD){\n                    this.ctx.fillStyle = \"#111111\";\n                    this.ctx.fillRect(i*this.squareSize,j*this.squareSize,this.squareSize,this.squareSize);\n                }\n                else if (this.grid.grid[i][j].sym == Item.FOOD){\n                    this.ctx.fillStyle = \"#5CB54A\";\n                    this.ctx.fillRect(i*this.squareSize,j*this.squareSize,this.squareSize,this.squareSize);\n                }\n                else if (this.grid.grid[i][j].sym == Item.BORDER){\n                    this.ctx.fillStyle = \"#1899FF\";\n                    this.ctx.fillRect(i*this.squareSize,j*this.squareSize,this.squareSize,this.squareSize);\n                }\n                else if (this.grid.grid[i][j].sym == Item.SNAKETAIL){\n                    this.ctx.fillStyle = \"yellow\";\n                    this.ctx.fillRect(i*this.squareSize,j*this.squareSize,this.squareSize,this.squareSize);\n                }\n                \n            }\n        }\n    }\n}","export enum Direction{\n    UP,\n    DOWN,\n    LEFT,\n    RIGHT\n}","import {Item} from \"./Item\";\nimport { Direction } from \"./Direction\";\nexport {Point};\nclass Point{\n    public x : number;\n    public y : number;\n    public sym : Item;\n    \n    constructor();\n    constructor (x: number, y : number, sym: Item);\n    constructor (p :Point);\n    constructor (x?,y?,sym?, p?){\n        if (typeof(x) === \"number\"){\n            this.x = x;\n            this.y = y;\n            this.sym = sym;\n        }\n        else{\n            this.sym = x.sym;\n            this.x = x.x;\n            this.y = x.y;\n        }\n        \n        \n      \n    }\n    \n    Move (offset : number, dir : Direction): void{\n        if (dir == Direction.UP){\n            this.y -=offset;\n        }\n        if (dir == Direction.DOWN){\n            this.y+=offset;\n        }\n        if (dir == Direction.LEFT){\n            this.x -=offset;\n        }\n        if (dir == Direction.RIGHT){\n            this.x +=offset;\n        }\n    }\n    isHit (p : Point) : boolean{\n        return p.x == this.x && p.y == this.y;\n    }\n\n}","import {Item} from \"./Item\";\nimport {Point} from \"./Point\";\nexport class Grid{\n    mapWidth : number;\n    mapHeight : number;\n    grid : Point [][];\n    constructor (mapWidth : number, mapHeight : number){\n        this.mapWidth = mapWidth;\n        this.mapHeight = mapHeight;\n\n        this.grid = [];\n        for (let i = 0 ; i < mapWidth; i++){\n            this.grid[i] = [];\n            for (let j = 0 ; j < mapHeight; j++){\n                this.grid[i][j] = new Point (i,j,Item.FIELD)\n            }\n        }\n    }\n    forDrawFrame (){\n        for (let i = 0 ; i < this.mapWidth; i++){\n            this.grid[i] = [];\n            for (let j = 0 ; j < this.mapHeight; j++){\n                this.grid[i][j] = new Point (i,j,Item.FIELD)\n            }\n        }\n    }\n    getInfo (list : Point[]){\n        for (let i = 0 ; i < this.mapWidth; i ++){\n            for (let j = 0; j < this.mapHeight; j ++){\n                for (let listi = 0 ; listi < list.length; listi++){\n                    if (list[listi].x == this.grid[i][j].x && list[listi].y == this.grid[i][j].y){\n                        this.grid[i][j].sym = list[listi].sym;\n                    }\n                    \n                }\n            }\n        }\n    }\n}","export {Figure};\nimport {Point} from \"./Point\";\nclass Figure{\n    pointList : Point[];\n    IsHitP (p : Point) : boolean {\n        this.pointList.forEach( l  => {\n            if (l.isHit(p)){\n                return true;\n            }\n        });\n        return false;\n    }\n    IsHitF (f : Figure) : boolean {\n    this.pointList.forEach ( l => {\n        if (f.IsHitP(l)){\n            return true;\n        }\n    })\n    return false;\n    }\n}","import {Point} from \"./Point\"\nimport {Item} from \"./Item\";\nimport { Figure } from \"./Figure\";\nexport class Wall extends Figure{\n    constructor (mapWidth : number, mapHeight : number){\n        //vertical lines\n        super();\n        this.pointList = [];\n        for ( let i = 0 ; i < mapWidth; i ++){\n         this.pointList.push(new Point(i,0,Item.BORDER));\n        }\n        for (let i = 0 ; i < mapWidth ; i++){\n           this.pointList.push (new Point(i,mapHeight-1,Item.BORDER));\n        }\n        //horizontal lines\n        for (let i = 0 ; i < mapHeight; i++){\n           this.pointList.push (new Point (0,i,Item.BORDER));\n        }\n        \n        for (let i = 0 ; i < mapHeight; i ++){\n           this.pointList.push (new Point (mapWidth-1,i,Item.BORDER));\n        }\n    }\n}","import {Direction} from \"./Direction\";\nimport {Point} from \"./Point\";\nimport { Figure } from \"./Figure\";\nimport { Item } from \"./Item\";\nexport class Snake extends Figure{\n    direction : Direction;\n    constructor(tail : Point, lenght : number, _direction : Direction){\n        super ();\n        this.pointList = [];\n        this.direction = _direction;\n        for (let i = 0; i < lenght; i++){\n            \n            let p = new Point(tail);\n            p.Move(i,this.direction);\n            this.pointList.push(p);\n        }\n    }\n    Move() : void{\n        let tail = this.pointList.shift();\n        let head = this.GetNextPoint();\n        this.pointList.push(head);\n    }\n    GetNextPoint() : Point{\n        let head = this.pointList[this.pointList.length - 1];\n        let nextP = new Point(head);\n        nextP.Move(1,this.direction);\n        return nextP;\n    }\n    Eat (food : Point): boolean{\n        let head = this.GetNextPoint();\n        if (head.isHit(food)){\n            food.sym = Item.SNAKETAIL;\n            this.pointList.push (food);\n            return true;\n        }\n        return false;\n    }\n    IsHitTail():boolean{\n        let head = this.pointList[this.pointList.length-1];\n        for (let i = 0 ; i < this.pointList.length - 2 ; i ++){\n            if (head.isHit(this.pointList[i])){\n                return true;\n            }\n        }\n        return false;\n    }\n    IsHitWall( w : Figure){\n        let head = this.pointList[this.pointList.length-1];\n        for (let i = 0 ; i < w.pointList.length - 1 ; i ++){\n            if (head.isHit(w.pointList[i])){\n                return true;\n            }\n        }\n        return false;\n    }\n}","import {Snake} from \"./Snake\";\nimport { Figure } from \"./Figure\";\nimport {Point} from \"./Point\";\nimport {Item} from \"./Item\";\nexport class Food extends Figure{\n    mapWidth : number;\n    mapHeight : number;\n    constructor (mapWidth : number , mapHeight : number){\n        super();\n        this.pointList = [];\n        this.mapWidth = mapWidth;\n        this.mapHeight = mapHeight;\n    }\n\n    CreateFood(snake : Snake){\n        let x = this.getRandomInt(1,this.mapWidth-1);\n        let y = this.getRandomInt(1,this.mapHeight - 1);\n        if (snake.IsHitP(new Point (x,y,Item.FOOD))){\n            this.CreateFood(snake);\n        }\n        else {\n            if (this.pointList.length!=0){\n                this.pointList.shift();\n            }\n            this.pointList.push(new Point (x,y,Item.FOOD));\n        }\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n      }\n}","import {Drawing} from \"./Drawing\";\nimport { Grid } from \"./Grid\";\nimport { Wall } from \"./Wall\";\nimport { Snake } from \"./Snake\";\nimport { Item } from \"./Item\";\nimport { Direction } from \"./Direction\";\nimport {Point} from \"./Point\";\nimport { Food } from \"./Food\";\nwindow.onload = function() {\n    let width : number;\n    let height : number;\n    let canvas : HTMLCanvasElement;\n    let ctx : CanvasRenderingContext2D;\n    let grid : Grid;\n    grid = new Grid(30,30);\n    let wall = new Wall(30,30);\n    grid.getInfo(wall.pointList);\n    let drawThing : Drawing;\n    let snake = new Snake(new Point (4,4,Item.SNAKETAIL),5,Direction.RIGHT);\n    grid.getInfo(snake.pointList);\n    let food = new Food(30,30);\n    food.CreateFood(snake);\n    grid.getInfo(food.pointList);\n    //button Click\n    document.addEventListener('keydown', keyDownHandler,false);\n    function keyDownHandler(e) {\n        if(e.key == \"Right\" || e.key == \"ArrowRight\") {\n            snake.direction = Direction.RIGHT;\n        }\n        else if(e.key == \"Left\" || e.key == \"ArrowLeft\") {\n            snake.direction = Direction.LEFT;\n        }\n        else if (e.key == \"Down\" || e.key == \"ArrowDown\"){\n            snake.direction = Direction.DOWN;\n        }\n        else if (e.key == \"Up\" || e.key == \"ArrowUp\"){\n            snake.direction = Direction.UP;\n        }\n    }\n    document.getElementById(\"testButton\").onclick  = function(){\n        canvas = document.getElementById(\"gameWindow\") as HTMLCanvasElement;\n        ctx = canvas.getContext(\"2d\");\n        drawThing = new Drawing(canvas,grid);\n        drawThing.DrawFrame();\n        let gameLoop = setInterval(function(){\n           if (snake.IsHitTail() || snake.IsHitWall(wall)){\n               clearInterval(gameLoop);              \n           }\n           if (snake.Eat(food.pointList[0])){\n               food.CreateFood(snake);\n           }\n           snake.Move();\n           grid.forDrawFrame();\n           grid.getInfo(wall.pointList);\n           grid.getInfo(snake.pointList);\n           grid.getInfo(food.pointList);\n           drawThing.DrawFrame();\n       },500);\n    }\n}"]}